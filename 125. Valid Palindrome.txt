// class Solution {
// private:
//  bool isValid(char ch){
//      if((ch >='a'&& ch<='z') || (ch>='A'&& ch<='Z')||(ch>='0'&&ch<='9')){
//          return 1;
//      }
//      return 0;
//  }
//  char toLowerCase(char ch){
//      if((ch>='a'&&ch<='z')||(ch>='0'&&ch<='9')){
//          return ch;
//      }else{
//          char temp= ch-'A'+'a';
//         return temp;
//      }
//  }
//  bool checkIsPal(string a){
//   for(int i=0,j= a.length()-1;i<=j;i++,j--){
//       if(a[i]!=a[j]){
//           return 0;
//       }
//   } 
//    return 1;
// }
// public:
//     bool isPalindrome(string s) {
//         // Remove the unwaned Characters
//         string s1="";
//         for(int i=0;i<=s.size()-1;i++){
//             if(isValid(s[i])){
//                 s1.push_back(s[i]);
//             }
//         }
//         for(int j=0;j<=s.size()-1;j++){
//             s1[j]= toLowerCase(s1[j]);
//         }
//         return checkIsPal(s1);
//     }
// };
class Solution {
public:
    bool isPalindrome(string s) {
        int start = 0;
        int end = s.size()-1;
        while(start<=end){
            if(!isalnum(s[start])){
                start++;
                continue;
            }if(!isalnum(s[end])){
                end--;
                continue;
            }if(tolower(s[start]) != tolower(s[end])){
                return false;
            }else{
                start++;
                end--;
            }
        }
        return true;
    }
};