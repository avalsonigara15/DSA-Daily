// class Solution {
// public:
//     int countNegatives(vector<vector<int>>& grid) {
//         int count=0;
//         for(int i=0;i<grid.size();i++){
//             for(int j=0;j<grid[0].size();j++){
//                 if(grid[i][j]<0){
//                     count++;
//                 }
//             }
//         }
//         return count;
//     }
// };


class Solution{

    int sum(int s,int e,vector<int> & vec){
        int ans =-1;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(vec[mid]<0){
                ans=mid;
                e=mid-1;
            }
            else{
                s=mid+1;
            }
        }
        return ans;
    }

public:
    int countNegatives(vector<vector<int>>& grid){

        int m=grid.size();
        int n=grid[0].size();
        int ans=0;

        for(int i=0;i<m;i++){
            int ind=sum(0,n-1,grid[i]);
            if(ind!=-1) {ans+=n-ind;}
        }
        return ans;
    }
};