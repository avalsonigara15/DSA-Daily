class Solution {
public:
    int maxArea(vector<int>& height) {
    //     int p1,ans;
    //     int max1;
    //     vector<int>ind1,ind2;
    //   for(int i = 0;i<height.size()-2;i++){
    //       if(height[i]<height[i+1]){
    //        ind1.push_back(i+1);
    //         p1=ind1[0];
    //         max1=height[i+1];
    //       }
    //   }  
    //   for(int i=height.size()-1;i>=p1;i--){
    //     ind2.push_back(height[i]*(i-p1));
    //   }
    //   return  *max_element(ind2.begin(),ind2.end());
     int ans = 0, n = height.size();
       int i = 0, j = n-1;
       while(i<j){
           if(height[i]>height[j]){
               ans = max(ans, (j-i)*height[j]);
               j--;
           }
           else{
               ans = max(ans, (j-i)*height[i]);
               i++;
           }
       }
       return ans;
    }
};